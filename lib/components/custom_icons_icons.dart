/// Flutter icons CustomIcons
/// Copyright (C) 2019 by original authors @ fluttericon.com, fontello.com
/// This font was generated by FlutterIcon.com, which is derived from Fontello.
///
/// To use this font, place it in your fonts/ directory and include the
/// following in your pubspec.yaml
///
/// flutter:
///   fonts:
///    - family:  CustomIcons
///      fonts:
///       - asset: fonts/CustomIcons.ttf
///
///
/// * Linecons, Copyright (C) 2013 by Designmodo
///         Author:    Designmodo for Smashing Magazine
///         License:   CC BY ()
///         Homepage:  http://designmodo.com/linecons-free/
/// * Material Design Icons, Copyright (C) Google, Inc
///         Author:    Google
///         License:   Apache 2.0 (https://www.apache.org/licenses/LICENSE-2.0)
///         Homepage:  https://design.google.com/icons/
/// * Font Awesome, Copyright (C) 2016 by Dave Gandy
///         Author:    Dave Gandy
///         License:   SIL ()
///         Homepage:  http://fortawesome.github.com/Font-Awesome/
/// * Linearicons Free, Copyright (C) Linearicons.com
///         Author:    Perxis
///         License:   CC BY-SA 4.0 (https://creativecommons.org/licenses/by-sa/4.0/)
///         Homepage:  https://linearicons.com
///
import 'package:flutter/widgets.dart';

class CustomIcons {
  CustomIcons._();

  static const _kFontFam = 'CustomIcons';

  static const IconData key = const IconData(0xe800, fontFamily: _kFontFam);
  static const IconData user = const IconData(0xe801, fontFamily: _kFontFam);
  static const IconData weight = const IconData(0xe802, fontFamily: _kFontFam);
  static const IconData height = const IconData(0xe803, fontFamily: _kFontFam);
  static const IconData stroller =
      const IconData(0xe804, fontFamily: _kFontFam);
  static const IconData gender = const IconData(0xe805, fontFamily: _kFontFam);
  static const IconData info = const IconData(0xe806, fontFamily: _kFontFam);
  static const IconData logout = const IconData(0xe807, fontFamily: _kFontFam);
  static const IconData couple = const IconData(0xe80d, fontFamily: _kFontFam);
  static const IconData lock = const IconData(0xe80f, fontFamily: _kFontFam);
  static const IconData envelope =
      const IconData(0xe818, fontFamily: _kFontFam);
  static const IconData book = const IconData(0xe828, fontFamily: _kFontFam);
  static const IconData chevron_left_circle =
      const IconData(0xe889, fontFamily: _kFontFam);
}

class HexColor extends Color {
  static int _getColorFromHex(String hexColor) {
    hexColor = hexColor.toUpperCase().replaceAll('#', '');
    if (hexColor.length == 6) {
      hexColor = 'FF' + hexColor;
    }
    return int.parse(hexColor, radix: 16);
  }

  HexColor(final String hexColor) : super(_getColorFromHex(hexColor));
}
